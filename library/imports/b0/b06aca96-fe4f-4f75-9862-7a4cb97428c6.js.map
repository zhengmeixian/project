{"version":3,"sources":["..\\..\\..\\..\\assets\\scripts/assets\\scripts\\Game.js"],"names":["cc","Class","extends","Component","gainScore","score","scoreDisplay","string","toString","onLoad","groundY","ground","y","height","spawnNewStar","timer","starDuration","newStar","instantiate","starPrefab","node","addChild","setPosition","getNewStarPosition","getComponent","game","minStarDuration","random0To1","maxStarDuration","randX","randY","player","jumpHeight","maxX","width","randomMinus1To1","p","properties","default","type","Prefab","Node","Label","scoreAudio","url","AudioClip","audioEngine","playEffect","dt","gameOver","stopAllActions","director","loadScene"],"mappings":";;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEAA,GAAGC,KAAH;AACIC,aAASF,GAAGG,SADhB;;AAGIC,eAAW,qBAAY;AACnB,aAAKC,KAAL,IAAc,CAAd;AACA;AACA,aAAKC,YAAL,CAAkBC,MAAlB,GAA2B,YAAY,KAAKF,KAAL,CAAWG,QAAX,EAAvC;AACH,KAPL;AAQIC,YAAQ,kBAAY;AAChB;AACA,aAAKC,OAAL,GAAe,KAAKC,MAAL,CAAYC,CAAZ,GAAgB,KAAKD,MAAL,CAAYE,MAAZ,GAAmB,CAAlD;AACA;AACA,aAAKC,YAAL;AACA;AACA,aAAKT,KAAL,GAAa,CAAb;AACC;AACA,aAAKU,KAAL,GAAa,CAAb;AACA,aAAKC,YAAL,GAAoB,CAApB;AACA;AACA,aAAKF,YAAL;AACA;AACA,aAAKT,KAAL,GAAa,CAAb;AACJ,KAtBL;;AAwBIS,kBAAc,wBAAW;AACrB;AACA,YAAIG,UAAUjB,GAAGkB,WAAH,CAAe,KAAKC,UAApB,CAAd;AACA;AACA,aAAKC,IAAL,CAAUC,QAAV,CAAmBJ,OAAnB;AACA;AACAA,gBAAQK,WAAR,CAAoB,KAAKC,kBAAL,EAApB;AACA;AACAN,gBAAQO,YAAR,CAAqB,MAArB,EAA6BC,IAA7B,GAAoC,IAApC;AACA;AACA,aAAKT,YAAL,GAAoB,KAAKU,eAAL,GAAuB1B,GAAG2B,UAAH,MAAmB,KAAKC,eAAL,GAAuB,KAAKF,eAA/C,CAA3C;AACA,aAAKX,KAAL,GAAa,CAAb;AACH,KApCL;;AAsCIQ,wBAAoB,8BAAY;AAC5B,YAAIM,QAAQ,CAAZ;AACA;AACA,YAAIC,QAAQ,KAAKpB,OAAL,GAAeV,GAAG2B,UAAH,KAAkB,KAAKI,MAAL,CAAYP,YAAZ,CAAyB,QAAzB,EAAmCQ,UAApE,GAAiF,EAA7F;AACA;AACA,YAAIC,OAAO,KAAKb,IAAL,CAAUc,KAAV,GAAgB,CAA3B;AACAL,gBAAQ7B,GAAGmC,eAAH,KAAuBF,IAA/B;AACA;AACA,eAAOjC,GAAGoC,CAAH,CAAKP,KAAL,EAAYC,KAAZ,CAAP;AACH,KA/CL;AAgDIO,gBAAY;AACR;AACAlB,oBAAY;AACRmB,qBAAS,IADD;AAERC,kBAAMvC,GAAGwC;AAFD,SAFJ;AAMR;AACAZ,yBAAiB,CAPT;AAQRF,yBAAiB,CART;AASR;AACAf,gBAAQ;AACJ2B,qBAAS,IADL;AAEJC,kBAAMvC,GAAGyC;AAFL,SAVA;AAcR;AACAV,gBAAQ;AACJO,qBAAS,IADL;AAEJC,kBAAMvC,GAAGyC;AAFL,SAfA;AAmBRnC,sBAAc;AACVgC,qBAAS,IADC;AAEVC,kBAAMvC,GAAG0C;AAFC,SAnBN;AAuBR;AACAC,oBAAY;AACRL,qBAAS,IADD;AAERM,iBAAK5C,GAAG6C;AAEZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAlBY,SAxBJ;AAhDhB,2CA4Fe,qBAAY;AACnB,SAAKxC,KAAL,IAAc,CAAd;AACA;AACA,SAAKC,YAAL,CAAkBC,MAAlB,GAA2B,YAAY,KAAKF,KAAL,CAAWG,QAAX,EAAvC;AACA;AACAR,OAAG8C,WAAH,CAAeC,UAAf,CAA0B,KAAKJ,UAA/B,EAA2C,KAA3C;AACH,CAlGL,wCAmGY,gBAAUK,EAAV,EAAc;AAClB;AACA;AACA,QAAI,KAAKjC,KAAL,GAAa,KAAKC,YAAtB,EAAoC;AAChC,aAAKiC,QAAL;AACA;AACH;AACD,SAAKlC,KAAL,IAAciC,EAAd;AACH,CA3GL,0CA4Gc,oBAAY;AAClB,SAAKjB,MAAL,CAAYmB,cAAZ,GADkB,CACY;AAC9BlD,OAAGmD,QAAH,CAAYC,SAAZ,CAAsB,MAAtB;AACH,CA/GL,wDAmHa,CAER,CArHL","file":"Game.js","sourceRoot":"..\\..\\..\\..\\assets\\scripts","sourcesContent":["// Learn cc.Class:\r\n//  - [Chinese] http://docs.cocos.com/creator/manual/zh/scripting/class.html\r\n//  - [English] http://www.cocos2d-x.org/docs/creator/en/scripting/class.html\r\n// Learn Attribute:\r\n//  - [Chinese] http://docs.cocos.com/creator/manual/zh/scripting/reference/attributes.html\r\n//  - [English] http://www.cocos2d-x.org/docs/creator/en/scripting/reference/attributes.html\r\n// Learn life-cycle callbacks:\r\n//  - [Chinese] http://docs.cocos.com/creator/manual/zh/scripting/life-cycle-callbacks.html\r\n//  - [English] http://www.cocos2d-x.org/docs/creator/en/scripting/life-cycle-callbacks.html\r\n\r\ncc.Class({\r\n    extends: cc.Component,\r\n  \r\n    gainScore: function () {\r\n        this.score += 1;\r\n        // 更新 scoreDisplay Label 的文字\r\n        this.scoreDisplay.string = 'Score: ' + this.score.toString();\r\n    },\r\n    onLoad: function () {\r\n        // 获取地平面的 y 轴坐标\r\n        this.groundY = this.ground.y + this.ground.height/2;\r\n        // 生成一个新的星星\r\n        this.spawnNewStar();\r\n        // 初始化计分\r\n        this.score = 0;\r\n         // 初始化计时器\r\n         this.timer = 0;\r\n         this.starDuration = 0;\r\n         // 生成一个新的星星\r\n         this.spawnNewStar();\r\n         // 初始化计分\r\n         this.score = 0;\r\n    },\r\n\r\n    spawnNewStar: function() {\r\n        // 使用给定的模板在场景中生成一个新节点\r\n        var newStar = cc.instantiate(this.starPrefab);\r\n        // 将新增的节点添加到 Canvas 节点下面\r\n        this.node.addChild(newStar);\r\n        // 为星星设置一个随机位置\r\n        newStar.setPosition(this.getNewStarPosition());\r\n        // 将 Game 组件的实例传入星星组件\r\n        newStar.getComponent('Star').game = this;\r\n        // 重置计时器，根据消失时间范围随机取一个值\r\n        this.starDuration = this.minStarDuration + cc.random0To1() * (this.maxStarDuration - this.minStarDuration);\r\n        this.timer = 0;\r\n    },\r\n\r\n    getNewStarPosition: function () {\r\n        var randX = 0;\r\n        // 根据地平面位置和主角跳跃高度，随机得到一个星星的 y 坐标\r\n        var randY = this.groundY + cc.random0To1() * this.player.getComponent('Player').jumpHeight + 50;\r\n        // 根据屏幕宽度，随机得到一个星星 x 坐标\r\n        var maxX = this.node.width/2;\r\n        randX = cc.randomMinus1To1() * maxX;\r\n        // 返回星星坐标\r\n        return cc.p(randX, randY);\r\n    },\r\n    properties: {\r\n        // 这个属性引用了星星预制资源\r\n        starPrefab: {\r\n            default: null,\r\n            type: cc.Prefab\r\n        },\r\n        // 星星产生后消失时间的随机范围\r\n        maxStarDuration: 0,\r\n        minStarDuration: 0,\r\n        // 地面节点，用于确定星星生成的高度\r\n        ground: {\r\n            default: null,\r\n            type: cc.Node\r\n        },\r\n        // player 节点，用于获取主角弹跳的高度，和控制主角行动开关\r\n        player: {\r\n            default: null,\r\n            type: cc.Node\r\n        },\r\n        scoreDisplay: {\r\n            default: null,\r\n            type: cc.Label\r\n        },\r\n        // 得分音效资源\r\n        scoreAudio: {\r\n            default: null,\r\n            url: cc.AudioClip\r\n        }\r\n        // foo: {\r\n        //     // ATTRIBUTES:\r\n        //     default: null,        // The default value will be used only when the component attaching\r\n        //                           // to a node for the first time\r\n        //     type: cc.SpriteFrame, // optional, default is typeof default\r\n        //     serializable: true,   // optional, default is true\r\n        // },\r\n        // bar: {\r\n        //     get () {\r\n        //         return this._bar;\r\n        //     },\r\n        //     set (value) {\r\n        //         this._bar = value;\r\n        //     }\r\n        // },\r\n    },\r\n    gainScore: function () {\r\n        this.score += 1;\r\n        // 更新 scoreDisplay Label 的文字\r\n        this.scoreDisplay.string = 'Score: ' + this.score.toString();\r\n        // 播放得分音效\r\n        cc.audioEngine.playEffect(this.scoreAudio, false);\r\n    },\r\n    update: function (dt) {\r\n        // 每帧更新计时器，超过限度还没有生成新的星星\r\n        // 就会调用游戏失败逻辑\r\n        if (this.timer > this.starDuration) {\r\n            this.gameOver();\r\n            return;\r\n        }\r\n        this.timer += dt;\r\n    },\r\n    gameOver: function () {\r\n        this.player.stopAllActions(); //停止 player 节点的跳跃动作\r\n        cc.director.loadScene('game');\r\n    },\r\n    // LIFE-CYCLE CALLBACKS:\r\n// onLoad () {},\r\n\r\n    start () {\r\n\r\n    },\r\n\r\n    // update (dt) {},\r\n});\r\n"]}