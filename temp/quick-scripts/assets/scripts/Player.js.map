{"version":3,"sources":["Player.js"],"names":["cc","Class","extends","Component","update","dt","accLeft","xSpeed","accel","accRight","Math","abs","maxMoveSpeed","node","x","onLoad","jumpAction","setJumpAction","runAction","setInputControl","properties","jumpHeight","jumpDuration","jumpAudio","default","url","AudioClip","jumpUp","moveBy","p","easing","easeCubicActionOut","jumpDown","easeCubicActionIn","callback","callFunc","playJumpSound","repeatForever","sequence","audioEngine","playEffect","self","systemEvent","on","SystemEvent","EventType","KEY_DOWN","event","keyCode","KEY","a","d","KEY_UP","start"],"mappings":"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","file":"Player.js","sourceRoot":"..\\..\\..\\..\\assets\\scripts","sourcesContent":["// Learn cc.Class:\r\n//  - [Chinese] http://docs.cocos.com/creator/manual/zh/scripting/class.html\r\n//  - [English] http://www.cocos2d-x.org/docs/creator/en/scripting/class.html\r\n// Learn Attribute:\r\n//  - [Chinese] http://docs.cocos.com/creator/manual/zh/scripting/reference/attributes.html\r\n//  - [English] http://www.cocos2d-x.org/docs/creator/en/scripting/reference/attributes.html\r\n// Learn life-cycle callbacks:\r\n//  - [Chinese] http://docs.cocos.com/creator/manual/zh/scripting/life-cycle-callbacks.html\r\n//  - [English] http://www.cocos2d-x.org/docs/creator/en/scripting/life-cycle-callbacks.html\r\n\r\ncc.Class({\r\n    extends: cc.Component,\r\n// Player.js\r\n    //...\r\n    update: function (dt) {\r\n        // 根据当前加速度方向每帧更新速度\r\n        if (this.accLeft) {\r\n            this.xSpeed -= this.accel * dt;\r\n        } else if (this.accRight) {\r\n            this.xSpeed += this.accel * dt;\r\n        }\r\n        // 限制主角的速度不能超过最大值\r\n        if ( Math.abs(this.xSpeed) > this.maxMoveSpeed ) {\r\n            // if speed reach limit, use max speed with current direction\r\n            this.xSpeed = this.maxMoveSpeed * this.xSpeed / Math.abs(this.xSpeed);\r\n        }\r\n\r\n        // 根据当前速度更新主角的位置\r\n        this.node.x += this.xSpeed * dt;\r\n    },\r\n    onLoad: function () {\r\n        // 初始化跳跃动作\r\n        this.jumpAction = this.setJumpAction();\r\n        this.node.runAction(this.jumpAction);\r\n\r\n        // 加速度方向开关\r\n        this.accLeft = false;\r\n        this.accRight = false;\r\n        // 主角当前水平方向速度\r\n        this.xSpeed = 0;\r\n\r\n        // 初始化键盘输入监听\r\n        this.setInputControl();\r\n    },\r\n    properties: {\r\n        // 主角跳跃高度\r\n        jumpHeight: 0,\r\n        // 主角跳跃持续时间\r\n        jumpDuration: 0,\r\n        // 最大移动速度\r\n        maxMoveSpeed: 0,\r\n        // 加速度\r\n        accel: 0,\r\n         // 跳跃音效资源\r\n        jumpAudio: {\r\n                    default: null,\r\n                    url: cc.AudioClip\r\n                },\r\n    },\r\n    setJumpAction: function () {\r\n        // 跳跃上升\r\n        var jumpUp = cc.moveBy(this.jumpDuration, cc.p(0, this.jumpHeight)).easing(cc.easeCubicActionOut());\r\n        // 下落\r\n        var jumpDown = cc.moveBy(this.jumpDuration, cc.p(0, -this.jumpHeight)).easing(cc.easeCubicActionIn());\r\n        // 添加一个回调函数，用于在动作结束时调用我们定义的其他方法\r\n        var callback = cc.callFunc(this.playJumpSound, this);\r\n        // 不断重复，而且每次完成落地动作后调用回调来播放声音\r\n        return cc.repeatForever(cc.sequence(jumpUp, jumpDown, callback));\r\n    },\r\n\r\n    playJumpSound: function () {\r\n        // 调用声音引擎播放声音\r\n        cc.audioEngine.playEffect(this.jumpAudio, false);\r\n    },\r\n    setInputControl: function () {\r\n        var self = this;\r\n        // 添加键盘事件监听\r\n        // 有按键按下时，判断是否是我们指定的方向控制键，并设置向对应方向加速\r\n        cc.systemEvent.on(cc.SystemEvent.EventType.KEY_DOWN, function (event){\r\n            switch(event.keyCode) {\r\n                case cc.KEY.a:\r\n                    self.accLeft = true;\r\n                    break;\r\n                case cc.KEY.d:\r\n                    self.accRight = true;\r\n                    break;\r\n            }\r\n        });\r\n\r\n        // 松开按键时，停止向该方向的加速\r\n        cc.systemEvent.on(cc.SystemEvent.EventType.KEY_UP, function (event){\r\n            switch(event.keyCode) {\r\n                case cc.KEY.a:\r\n                    self.accLeft = false;\r\n                    break;\r\n                case cc.KEY.d:\r\n                    self.accRight = false;\r\n                    break;\r\n            }\r\n        });\r\n    },\r\n    \r\n    //...\r\n\r\n    // LIFE-CYCLE CALLBACKS:\r\n\r\n    // onLoad () {},\r\n\r\n    start () {\r\n\r\n    },\r\n\r\n    // update (dt) {},\r\n});\r\n"]}